# -*- coding: utf-8 -*-
"""Personalized Text Summarizer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/personalized-text-summarizer-e7580b93-b66e-4ced-a277-dc2f8acec0f7.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20240826/auto/storage/goog4_request%26X-Goog-Date%3D20240826T145510Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3Daeefe0a7befb8724de53931fbb5e2497a8d8fb7bcee67302d69b008a3daaa7cea86c19fb873e3300297e3937eb27562d4803e75513347f8af2a1c3b373329eff49b6f411dadc73a0843e35c14ae7e8f97262f7e5e7002764228c3a88dcb55e04d228a0f82e070ef1e890893013308a9d6f06b5c9c6e6c176af477cbff69405b7886072f1f73efc8958437fda0f7b0212efbe3d5150d5f102eb6cfa60f87c14d6ec4e08886a14f844072130d1c0a66ec103559fb5e1d3c002c1448129b1e560c94244181f637913af59583ff4e765326a3b8f9c05f65bc861d084ae6ff1033f2de894ec467bb493587fd43a7bd3f4d337545382f101120e6565b00d585fa95c3b
"""

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All"
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session

pip install streamlit transformers nltk spacy

from transformers import pipeline

summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

import streamlit as st

# Title of the Streamlit app
st.title("Personalized Text Summarizer")

# Text area for input
text_input = st.text_area("Enter the text you want to summarize:")

# Slider for summary length
summary_length = st.slider("Select the summary length:", min_value=10, max_value=500, value=100)

# Dropdown for summary focus (e.g., key points, specific details)
focus_area = st.selectbox("Select the focus area:", ["Key Points", "Specific Details", "General Overview"])

# Button to generate the summary
if st.button("Summarize"):
    if text_input:
        # Generate summary based on user input
        summary = summarizer(text_input, max_length=summary_length, min_length=summary_length//2, do_sample=False)[0]['summary_text']

        # Display the summary
        st.subheader("Summary:")
        st.write(summary)
    else:
        st.warning("Please enter some text to summarize.")

if focus_area == "Key Points":
    summary = summarizer(text_input, max_length=summary_length, min_length=summary_length//2, do_sample=False, num_beams=4)[0]['summary_text']
elif focus_area == "Specific Details":
    summary = summarizer(text_input, max_length=summary_length, min_length=summary_length//2, do_sample=True, top_k=50)[0]['summary_text']
elif focus_area == "General Overview":
    summary = summarizer(text_input, max_length=summary_length, min_length=summary_length//2, do_sample=False, num_return_sequences=1)[0]['summary_text']



